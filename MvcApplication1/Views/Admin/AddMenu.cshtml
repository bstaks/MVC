@model MvcApplication1.DataModels.Menu

@{
    ViewBag.Title = "AddMenu";
}

<h2>AddMenu</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Menu</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        

        <div class="editor-label">
            @Html.LabelFor(model => model.MenuType)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.MenuType,new List<SelectListItem>())
            @Html.ValidationMessageFor(model => model.MenuType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ParentMenuId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.ParentMenuId, new List<SelectListItem>())
            @Html.ValidationMessageFor(model => model.ParentMenuId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ControllerName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ControllerName)
            @Html.ValidationMessageFor(model => model.ControllerName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ActionName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ActionName)
            @Html.ValidationMessageFor(model => model.ActionName)
        </div>

        

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
